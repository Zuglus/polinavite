// static-generation.config.js
import { build } from 'vite';
import fs from 'fs';
import path from 'path';
import * as cheerio from 'cheerio';
import { createSitemap } from './create-sitemap.js';
import { optimizeImages } from './optimize-images.js';
import { compressAssets } from './compress-assets.js';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∞–π—Ç–∞
 */
async function staticGenerate() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞
    await build();
    
    console.log('‚úÖ –ë–∞–∑–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    
    // –ü—É—Ç—å –∫ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–º—É HTML —Ñ–∞–π–ª—É
    const htmlPath = path.resolve(__dirname, '../dist', 'index.html');
    
    // –ß–∏—Ç–∞–µ–º –∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º HTML
    const html = fs.readFileSync(htmlPath, 'utf-8');
    const $ = cheerio.load(html);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è SEO
    $('head').append(`
      <meta name="author" content="–ü–æ–ª–∏–Ω–∞ –ú–∏–≥—Ä–∞–Ω–æ–≤–∞">
      <meta name="robots" content="index, follow">
      <meta property="og:title" content="–ü–æ–ª–∏–Ω–∞ –ú–∏–≥—Ä–∞–Ω–æ–≤–∞ | –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä">
      <meta property="og:description" content="–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞ –ü–æ–ª–∏–Ω—ã –ú–∏–≥—Ä–∞–Ω–æ–≤–æ–π. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞, –±—Ä–µ–Ω–¥–∏–Ω–≥, –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–µ–±-–¥–∏–∑–∞–π–Ω.">
      <meta property="og:type" content="website">
      <meta property="og:url" content="https://example.com">
      <meta property="og:image" content="https://example.com/og-image.jpg">
      <link rel="canonical" href="https://example.com">
    `);
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    $('head').append(`
      <link rel="preload" href="/assets/fonts/MV-SKIFER.otf" as="font" type="font/otf" crossorigin>
      <link rel="preload" href="/assets/fonts/Onest-Regular.ttf" as="font" type="font/ttf" crossorigin>
    `);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    $('body').append(`
      <script>
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        if (window.innerWidth < 768) {
          const mobilePrefetchUrls = [
            '/assets/images/logo.svg',
            '/assets/images/threads.png',
            '/assets/images/code.png',
            '/assets/images/day.png'
          ];
          
          mobilePrefetchUrls.forEach(url => {
            const link = document.createElement('link');
            link.rel = 'prefetch';
            link.href = url;
            document.head.appendChild(link);
          });
        }
      </script>
    `);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π HTML
    fs.writeFileSync(htmlPath, $.html());
    
    console.log('‚úÖ HTML –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è SEO');
    
    // –°–æ–∑–¥–∞–µ–º sitemap.xml
    await createSitemap();
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω sitemap.xml');
    
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await optimizeImages();
    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    
    // –°–∂–∏–º–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
    await compressAssets();
    console.log('‚úÖ –†–µ—Å—É—Ä—Å—ã —Å–∂–∞—Ç—ã');
    
    console.log('üéâ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–π—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∞–π—Ç–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
staticGenerate();