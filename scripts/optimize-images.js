// scripts/optimize-images.js
import fs from 'fs';
import path from 'path';
import { execSync } from 'child_process';

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ dist
 */
export async function optimizeImages() {
  const imageDir = path.resolve(__dirname, '../dist/assets/images');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
  if (!fs.existsSync(imageDir)) {
    console.log('‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é');
    return;
  }
  
  // –ó–¥–µ—Å—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –≤—ã –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≤—Ä–æ–¥–µ sharp –∏–ª–∏ imagemin
  // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∏–º–∏—Ç–∞—Ü–∏—é
  console.log('üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:', imageDir);
  
  const files = fs.readdirSync(imageDir);
  const imageFiles = files.filter(file => 
    /\.(jpe?g|png|gif|svg)$/i.test(file)
  );
  
  console.log(`üñºÔ∏è –ù–∞–π–¥–µ–Ω–æ ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏`);
  
  // –ò–º–∏—Ç–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  console.log('üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
  
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–ª–∏—Å—å –±—ã —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  // imageFiles.forEach(file => optimizeImage(path.join(imageDir, file)));
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è WebP –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const generatedWebP = [];
  imageFiles.filter(file => /\.(jpe?g|png)$/i.test(file)).forEach(file => {
    const filePath = path.join(imageDir, file);
    const webpPath = filePath.replace(/\.[^.]+$/, '.webp');
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã —Å–æ–∑–¥–∞–≤–∞–ª–∏—Å—å WebP –≤–µ—Ä—Å–∏–∏
    // –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –ª–æ–≥–∞
    generatedWebP.push(webpPath);
  });
  
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${generatedWebP.length} WebP –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
}